{"remainingRequest":"/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/src/views/Avatar-builder.vue?vue&type=template&id=de73df3e&scoped=true&","dependencies":[{"path":"/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/src/views/Avatar-builder.vue","mtime":1648963744448},{"path":"/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1648679005973},{"path":"/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1648679007299},{"path":"/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1648679005973},{"path":"/Users/skon/Documents/CS 260/cp.nateskonnard/front-end/node_modules/vue-loader/lib/index.js","mtime":1648679006830}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}